openapi: 3.0.0
info:
  title: Nepal Commerce API
  description: Ecommerce Multi-Vendor
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: wishlist
  - name: user
  - name: user > Social Login
  - name: vendor
  - name: Brand
  - name: Category
  - name: Attribute
  - name: Product
  - name: Product > vendor
  - name: review
  - name: review > buyer
  - name: review > vendor
  - name: Banner
  - name: Message
  - name: BlockedChat
  - name: PackageSubscription
  - name: PasswordReset
  - name: ProductQuestion
  - name: ProductAnswer
  - name: VendorShipping
  - name: UserAddress
  - name: UserProfile
  - name: EmailVerification
  - name: Notification
  - name: payment
  - name: cart
  - name: order
  - name: order > vendor
  - name: order > customer
  - name: Ticket
  - name: vendor rating
  - name: vendor rating > customer
  - name: vendor rating > vendor
  - name: Payout
  - name: admin
  - name: Site Settings
  - name: Slider
  - name: Homepage
  - name: Tag
  - name: Vendor Dashboard
paths:
  /api/wishlist:
    post:
      tags:
        - wishlist
      summary: store wishlist(user)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - wishlist
      summary: get wishlist(user)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/wishlist/2:
    delete:
      tags:
        - wishlist
      summary: remove wishlist
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/sign-in/social:
    post:
      tags:
        - user > Social Login
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  example: google
                access_token:
                  type: string
                  example: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmaXJzdE5hbWUiOiJMZW9uIiwidWlkIjoiZ3BfXzEwMDgwMDIzNzkyODgxODA5MTQwNSIsInByb3ZpZGVyIjoiZ29vZ2xlIiwicm9sZXMiOlsiVVNFUiJdLCJpYXQiOjE2NTU3OTYzNDEsImV4cCI6MTY1NTc5OTk0MX0.SOJ-LR-0h1xEzYyPreaQ-nOyVdnhbJTxvsfH7OYlMVU
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/register:
    post:
      tags:
        - user
      summary: registration
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  example: Bishal
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
                password:
                  type: string
                  example: Asd@360
                password_confirmation:
                  type: string
                  example: Asd@360
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/login:
    post:
      tags:
        - user
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/password/email:
    post:
      tags:
        - user
      summary: send reset link email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/password/reset/{token}:
    post:
      tags:
        - user
      summary: password reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
                password:
                  type: string
                  example: Asd@360
                password_confirmation:
                  type: string
                  example: Asd@360
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: QDzaX3pkrHGvvZEuROLwoXgLplo2RkzAvnleZlQam6O2FjNkB6haBoLvYrNXwp5p
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/change-password:
    post:
      tags:
        - user
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rds
                password_confirmation:
                  type: string
                  example: P@ssw0rds
                old_password:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/refresh-token/{refresh_token}:
    post:
      tags:
        - user
      summary: user refresh token
      requestBody:
        content: {}
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def502003b1c5eab032a3577bc29caed4d9fe7a9898add256553b09b6fa97cf6b7b984758f1209a109c46ad8d27b9b03df889e5575d64bfacef4c75b28effe9a238823db44722908219127e90b3b2fc696cf51a3e8faec25dadbd78337383feb5351ff92b6d5f99f1e51a526e2a03ffeb0d9faeebe9a4c0b5fa07599887a9f34981e19b2fd1f4e0bc769d7665234b1e8c002f40d63c1ab94ba3c02278d2affbb97fe926ad5c1f4736e94b5e489aaad3e9c4d5d6c927cf6d5c1c1ef7c6be4e766094d8b781b0f38acaeae9e5846e391142e4211e76ad77fa80486be40448b30a406f0acc0219e95c0118dd8d98f4bf5aa60f8186f33e064cf59f78145b182cf8fbe9a2a6ed7a901313705bd40979f02a3039654f6b394530f1169c2c2224560cb2cfba0428775296ee52399bb9492d188e3bfd2e14bae16b7908edcfb46d061fd2b462cd33d0ae8f997911aab113bfde4e920cd40b4d9258a8fcdfb6cbea75e679474612f20
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/register:
    post:
      tags:
        - vendor
      summary: vendor registration
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tom n Jerry
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/login:
    post:
      tags:
        - vendor
      summary: vendor login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: Nepalcommerce!23
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/confidential:
    get:
      tags:
        - vendor
      summary: get vendor detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - vendor
      summary: store vendor confidential
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                registration_certificate:
                  type: string
                  format: binary
                vat_number:
                  type: integer
                  example: '12453674897'
                contact_number:
                  type: integer
                  example: '132467980'
                company_name:
                  type: string
                  example: vendor company
                phone:
                  type: integer
                  example: '412357869'
                address:
                  type: string
                  example: vendor address
                bank:
                  type: string
                  example: vendor bank
                branch:
                  type: string
                  example: vendor branch
                account_holder_name:
                  type: string
                  example: vendor account
                account_number:
                  type: integer
                  example: '123423452345'
                citizenship:
                  type: string
                  format: binary
                cheque_photo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/home-page:
    get:
      tags:
        - vendor
      summary: homepage
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/profile:
    get:
      tags:
        - vendor
      summary: get vendor profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/password/email:
    post:
      tags:
        - vendor
      summary: send reset link email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/password/reset/{token}:
    post:
      tags:
        - vendor
      summary: password reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      parameters:
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: tuJPJEEHHt3f4acyrJSBCgtACRk17gSGYiDZ72fF5GIbnbBdj5CJOn4tAQ4Ybm7l
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/change-password:
    post:
      tags:
        - vendor
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                old_password:
                  type: string
                  example: P@ssw0rds
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/refresh-token/{refresh_token}:
    post:
      tags:
        - vendor
      summary: vendor refresh token
      requestBody:
        content: {}
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def502007f8bed351ddb5b138cfb68b0ba38d5f3d1fbc131acd8491a7403bb54211c8b5f28d71a4123f97c03f0334f161a8d7bcb298334d4ae8a5567cc08a0e58021e0e47a4d6929ebde2ca38d7094b238bf4244820569a2e76bea5719b110cf33bbaac9499ed1c033cc96d5cb9b518e24fa6628c40662ad2a8891fe7f277b32becb961b87df745b3a20a74dca4bd2c18d5302b9fcdd4f50b6ccb17c8f233560b258abe67d4db2ceaf8ae6d59571a7bd07e70d2721378d20b53ce5e5ebb5ada3b9fcd135135e19640ce47798b0153bb3213ac3acd5e04a8810b098e13b0311350baa5dc16182856fdafc16ca63f0a4815851d77eb49e6c2c85e071aaa8d8d2ab58f38bbfe8baa2795e161847ac41f9c2e73c85ac7c520a382c4ef023fc2ecb5382226a5c8055fbd6545a8842a0adf990aabd12acb55ec8e9bcc81cc7a990adeb448075c63bfb2dea52a1e70d10b6c312672a370097df4a411ac169da0f183a185d58d034
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/brand/brand:
    get:
      tags:
        - Brand
      summary: get all brands
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category:
    get:
      tags:
        - Category
      summary: getAllCategories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category/1:
    get:
      tags:
        - Category
      summary: getCategoryById
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category-parent:
    get:
      tags:
        - Category
      summary: getParent
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/attribute/attribute:
    get:
      tags:
        - Attribute
      summary: get all attributes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/attribute/category/id:
    get:
      tags:
        - Attribute
      summary: get category by id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/vendor-shop:
    get:
      tags:
        - Product > vendor
      summary: find vendor
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/store-attribute:
    post:
      tags:
        - Product
      summary: store attribute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_id: 3
                attribute:
                  id: 5
                  value: XL
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/update-attribute/1:
    post:
      tags:
        - Product
      summary: update attribute
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                value:
                  type: string
                  example: red
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/delete-attribute/1:
    delete:
      tags:
        - Product
      summary: delete attribute
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product-attribute/3:
    get:
      tags:
        - Product
      summary: get product attribute
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product:
    post:
      tags:
        - Product
      summary: storeProduct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: bst jastapata
                category_id: 2
                sub_category_id: ''
                sub_sub_category_id: ''
                video_url: video-url-1
                description: description-1
                seo_title: seo_title1
                seo_description: seo_description1
                seo_keyword:
                  - keyword1
                  - keyword2
                  - keyword3
                quantity_type: piece
                tag:
                  - tag1
                  - tag2
                  - tag3
                specification:
                  - title: title 1
                    description: description 1
                  - title: title 2
                    description: description 2
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Product
      summary: getAllProducts
      security:
        - bearerAuth: []
      parameters:
        - name: search_word
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
        - name: recent
          in: query
          schema:
            type: string
        - name: price_range
          in: query
          schema:
            type: string
        - name: rating
          in: query
          schema:
            type: string
        - name: most_order
          in: query
          schema:
            type: string
        - name: highest_rated
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product/35:
    patch:
      tags:
        - Product
      summary: editProduct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: converse-edit
                category_id: 1
                sub_category_id: '3'
                sub_sub_category_id: '4'
                video_url: video_url3edit
                description: description3edit
                seo_title: seo_title3edit
                seo_description: seo_description3edit
                seo_keyword:
                  - keywordedit1
                  - keywordedit2
                  - keywordedit3
                  - keywordedit4
                quantity_type: kg
                status: draft
                tag:
                  - tag1
                  - tag2
                  - tag3
                  - tag4
                specification:
                  - title: title 1edit
                    description: description 1edit
                  - title: title 2edit
                    description: description 2edit
                  - title: title 3edit
                    description: description 3edit
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product/{product_id}:
    get:
      tags:
        - Product
      summary: getProductById
      security:
        - bearerAuth: []
      parameters:
        - name: product_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product/1:
    delete:
      tags:
        - Product
      summary: deleteProduct
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/save-image/{product_id}:
    post:
      tags:
        - Product
      summary: saveImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                type:
                  type: string
                  example: featured_image
      security:
        - bearerAuth: []
      parameters:
        - name: product_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/delete-image:
    post:
      tags:
        - Product
      summary: delete image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_id:
                  type: integer
                  example: '2'
                product_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/store-combination/37:
    post:
      tags:
        - Product
      summary: update or create combination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                combination:
                  - id: ''
                    availability: 1
                    sku: jastapata-1009590
                    stock: 10000
                    base_price: 100
                    selected_attribute: []
                    quantity:
                      100-500: 95
                      500-1000: 90
                delete_id: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/store-combination/3:
    post:
      tags:
        - Product
      summary: combination edit test file
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                combination:
                  - id: '1'
                    availability: 1
                    sku: sku1
                    stock: 10
                    base_price: 100
                    selected_attribute:
                      - id: '1'
                        attribute_id: 4
                        value_id: 13
                      - id: '3'
                        attribute_id: 5
                        value_id: 15
                    quantity:
                      1-10: 101
                      11-22: 51
                  - id: '2'
                    availability: 1
                    sku: sku2
                    stock: 100
                    base_price: 200
                    selected_attribute:
                      - id: '2'
                        attribute_id: 4
                        value_id: 14
                      - id: '4'
                        attribute_id: 5
                        value_id: 16
                    quantity:
                      1-10: 201
                      11-22: 151
                delete_id: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/get-combination/{product_id}:
    get:
      tags:
        - Product
      summary: getProductCombination
      security:
        - bearerAuth: []
      parameters:
        - name: product_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/get-status:
    get:
      tags:
        - Product
      summary: get status list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/change-status/:
    post:
      tags:
        - Product
      summary: product status update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Published
                product_id:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/filter:
    get:
      tags:
        - Product
      summary: get product by category(filters)
      parameters:
        - name: search_word
          in: query
          schema:
            type: string
          example: cement
        - name: category
          in: query
          schema:
            type: string
          description: nullable
        - name: recent
          in: query
          schema:
            type: string
          description: boolean
        - name: price_range
          in: query
          schema:
            type: string
          description: 10-100
        - name: rating
          in: query
          schema:
            type: string
          description: 1, 2, 3, 4, 5
        - name: most_order
          in: query
          schema:
            type: string
          description: boolean
        - name: highest_rated
          in: query
          schema:
            type: string
          description: boolean
        - name: limit
          in: query
          schema:
            type: string
          description: nullable
        - name: tag
          in: query
          schema:
            type: string
          description: tag slug
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/single/{slug}:
    get:
      tags:
        - Product
      summary: single product
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: brick
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/review:
    post:
      tags:
        - review > buyer
      summary: store product review
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                star:
                  type: integer
                  example: '2'
                description:
                  type: string
                  example: pehele istamal karo phir biswas karo
                product_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/all-customer-review:
    get:
      tags:
        - review > buyer
      summary: get all review
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: nullable
          example: '10'
        - name: from_date
          in: query
          schema:
            type: string
          description: nullable
        - name: to_date
          in: query
          schema:
            type: string
          description: nullable
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/to-review:
    get:
      tags:
        - review > buyer
      summary: to review list
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: from_date
          in: query
          schema:
            type: string
        - name: to_date
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/single-customer-review/1:
    get:
      tags:
        - review > buyer
      summary: get single review
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/reply:
    post:
      tags:
        - review > vendor
      summary: store review reply(vendor)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                reply:
                  type: string
                  example: ok
                product_review_id:
                  type: integer
                  example: '6'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/review/6:
    get:
      tags:
        - review > vendor
      summary: get review by id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/findAllReview:
    get:
      tags:
        - review > vendor
      summary: get all reviews (vendor)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: nullable
          example: '10'
        - name: star
          in: query
          schema:
            type: string
          description: nullable
        - name: highest_rated
          in: query
          schema:
            type: string
          description: boolean, nullable
        - name: recent
          in: query
          schema:
            type: string
          description: boolean, nullable
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/filter/review/product-1:
    get:
      tags:
        - review
      summary: review filter
      security:
        - noauthAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: nullable
          example: '10'
        - name: star
          in: query
          schema:
            type: string
          description: nullable
        - name: highest_rated
          in: query
          schema:
            type: string
          description: boolean, nullable
        - name: recent
          in: query
          schema:
            type: string
          description: bollean, nullable
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/banner:
    post:
      tags:
        - Banner
      summary: store/update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: main_banner
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Banner
      summary: index from token
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/banner/{vendor_slug}/{key}:
    get:
      tags:
        - Banner
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: vendor_slug
          in: path
          schema:
            type: string
          required: true
          example: vendor-shop
        - name: key
          in: path
          schema:
            type: string
          required: true
          example: secondary-banner
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/banner/{vendor_slug}/vendor:
    get:
      tags:
        - Banner
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: vendor_slug
          in: path
          schema:
            type: string
          required: true
          example: vendor-shop
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/banner/{key}:
    delete:
      tags:
        - Banner
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: key
          in: path
          schema:
            type: string
          required: true
          example: main_banner
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/message:
    post:
      tags:
        - Message
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                to_id:
                  type: integer
                  example: '10'
                message:
                  type: string
                  example: Hello World
                product_id:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/message/{to_id}:
    get:
      tags:
        - Message
      summary: get
      security:
        - bearerAuth: []
      parameters:
        - name: to_id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/message/chat-list:
    get:
      tags:
        - Message
      summary: chat-list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/message/{message_id}/read:
    get:
      tags:
        - Message
      summary: read
      security:
        - bearerAuth: []
      parameters:
        - name: ''
          in: header
          schema:
            type: string
        - name: message_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/message/{message_id}/received:
    get:
      tags:
        - Message
      summary: received
      security:
        - bearerAuth: []
      parameters:
        - name: message_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/block/{to_id}:
    post:
      tags:
        - BlockedChat
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
      security:
        - bearerAuth: []
      parameters:
        - name: to_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/unblock/{to_id}:
    get:
      tags:
        - BlockedChat
      summary: unblock
      security:
        - bearerAuth: []
      parameters:
        - name: to_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/package-subscription:
    post:
      tags:
        - PackageSubscription
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                package_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-package:
    get:
      tags:
        - PackageSubscription
      summary: index
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/package:
    get:
      tags:
        - PackageSubscription
      summary: show vendor with package detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/password-reset/request:
    post:
      tags:
        - PasswordReset
      summary: request-user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: vendor@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor/password-reset:
    post:
      tags:
        - PasswordReset
      summary: reset- vendor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  example: hello
                new_password_confirmation:
                  type: string
                  example: hello
      security:
        - noauthAuth: []
      parameters:
        - name: token
          in: query
          schema:
            type: string
          example: zN9yqKm03i342vviyYfD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/password-reset:
    post:
      tags:
        - PasswordReset
      summary: reset- user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  example: what
                new_password_confirmation:
                  type: string
                  example: what
      security:
        - noauthAuth: []
      parameters:
        - name: token
          in: query
          schema:
            type: string
          example: GsBlQVWnZCz8fz6kb9mp
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/question/:
    post:
      tags:
        - ProductQuestion
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Where is your store located?!
                product_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - ProductQuestion
      summary: index
      security:
        - noauthAuth: []
      parameters:
        - name: product_id
          in: query
          schema:
            type: integer
          example: '3'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/question/{question_id}:
    post:
      tags:
        - ProductQuestion
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: What is your store located?asdjakld
                user_id:
                  type: integer
                  example: '7'
                product_id:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - ProductQuestion
      summary: show
      security:
        - noauthAuth: []
      parameters:
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - ProductQuestion
      summary: destroy
      security:
        - bearerAuth: []
      parameters:
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/questions/vendor:
    get:
      tags:
        - ProductQuestion
      summary: all vendor questions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/answer:
    post:
      tags:
        - ProductAnswer
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'Yes'
                question_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - ProductAnswer
      summary: index
      security:
        - noauthAuth: []
      parameters:
        - name: question_id
          in: query
          schema:
            type: integer
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/answer/{answer_id}:
    post:
      tags:
        - ProductAnswer
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Very Old Baneshwor
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: answer_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - ProductAnswer
      summary: show
      security:
        - noauthAuth: []
      parameters:
        - name: answer_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - ProductAnswer
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: answer_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-shipping:
    post:
      tags:
        - VendorShipping
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                district_id:
                  type: integer
                  example: '1'
                shipping_price:
                  type: integer
                  example: '222'
                active:
                  type: integer
                  example: '0'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-shipping/2:
    post:
      tags:
        - VendorShipping
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                district_id:
                  type: integer
                  example: '4'
                shipping_price:
                  type: integer
                  example: '2222'
                active:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-shipping/{vendor_id}/all:
    get:
      tags:
        - VendorShipping
      summary: index
      security:
        - noauthAuth: []
      parameters:
        - name: vendor_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-shipping/{vendor_id}/{district_id}/district:
    get:
      tags:
        - VendorShipping
      summary: district shipping price
      security:
        - noauthAuth: []
      parameters:
        - name: vendor_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
        - name: district_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-shipping/{vendor_shipping_id}:
    get:
      tags:
        - VendorShipping
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: vendor_shipping_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - VendorShipping
      summary: destroy
      security:
        - bearerAuth: []
      parameters:
        - name: vendor_shipping_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-address:
    post:
      tags:
        - UserAddress
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: BIshal GUrung
                phone:
                  type: integer
                  example: '123122131'
                district_id:
                  type: integer
                  example: '5'
                province_id:
                  type: integer
                  example: '7'
                full_address:
                  type: string
                  example: kathmandu
                type:
                  type: string
                  example: home
                is_primary:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - UserAddress
      summary: index
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-address/1:
    post:
      tags:
        - UserAddress
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: BIshal GUrung
                phone:
                  type: integer
                  example: '123122131'
                district_id:
                  type: integer
                  example: '2'
                province_id:
                  type: integer
                  example: '2'
                full_address:
                  type: string
                  example: Mahadevsthan, Srinkhalla GAlli, Kathman
                type:
                  type: string
                  example: home
                _method:
                  type: string
                  example: put
                is_primary:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - UserAddress
      summary: show
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - UserAddress
      summary: destroy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/district:
    get:
      tags:
        - UserAddress
      summary: district
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/province:
    get:
      tags:
        - UserAddress
      summary: province
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-profile:
    post:
      tags:
        - UserProfile
      summary: store/update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: customer
                email:
                  type: string
                  example: customer@gmail.com
                dob:
                  type: string
                  example: 1997/06/05
                gender:
                  type: string
                  example: female
                phone:
                  type: integer
                  example: '98989898'
                profile_pic:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-profile/{user_id}:
    get:
      tags:
        - UserProfile
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-profile/{user_id}/profile-pic:
    delete:
      tags:
        - UserProfile
      summary: delete profile pic
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/send-verification-email:
    post:
      tags:
        - EmailVerification
      summary: send email verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: vendor@gmail.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/verify-email:
    post:
      tags:
        - EmailVerification
      summary: verify email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: LiVruHld83jNeqQhk30GtEh1OhSsxUITMr7zrYhjArNRMYuRp7
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/notification:
    get:
      tags:
        - Notification
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/notification-type:
    get:
      tags:
        - Notification
      summary: get notification types
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/notification/3b4f6754-193d-4b3a-bf34-9a7766f1c379/read:
    get:
      tags:
        - Notification
      summary: read-at
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment:
    post:
      tags:
        - payment
      summary: store payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: title1
                key:
                  - name: public_key
                    value: '340192386456'
                  - name: private_key
                    value: '134526587662'
                status: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - payment
      summary: get all payments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/1:
    get:
      tags:
        - payment
      summary: get payment by id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/10:
    patch:
      tags:
        - payment
      summary: update payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: title1edit
                key:
                  - name: public_key
                    value: 340192386456-edit
                  - name: private_key
                    value: 134526587662-edit
                status: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/3:
    delete:
      tags:
        - payment
      summary: delete payment
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/cart/:
    post:
      tags:
        - cart
      summary: add to cart
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  example: '30'
                quantity:
                  type: integer
                  example: '1000'
                product_combination_id:
                  type: string
                  example: |
                    65
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - cart
      summary: get cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/cart/{cart_id}:
    delete:
      tags:
        - cart
      summary: delete cart item
      security:
        - bearerAuth: []
      parameters:
        - name: cart_id
          in: path
          schema:
            type: integer
          required: true
          example: '53'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/filter:
    get:
      tags:
        - order > vendor
      summary: get order filter
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: nullable
        - name: order_number
          in: query
          schema:
            type: string
          description: nullable
        - name: status
          in: query
          schema:
            type: string
          description: nullable
        - name: limit
          in: query
          schema:
            type: integer
          description: nullable
          example: '10'
        - name: from_date
          in: query
          schema:
            type: string
          description: nullable
        - name: to_date
          in: query
          schema:
            type: string
          description: nullable
        - name: id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/status/list:
    get:
      tags:
        - order > vendor
      summary: get all order status list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/update-status/3:
    post:
      tags:
        - order > vendor
      summary: update order status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: delivered
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/000000001:
    get:
      tags:
        - order > vendor
      summary: get order by order number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/order-status/000000001:
    get:
      tags:
        - order > vendor
      summary: get order status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/customer/filter:
    get:
      tags:
        - order > customer
      summary: get order filter
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: nullable
        - name: order_number
          in: query
          schema:
            type: string
          description: nullable
        - name: id
          in: query
          schema:
            type: string
          description: nullable
        - name: limit
          in: query
          schema:
            type: integer
          description: nullable
          example: '10'
        - name: from_date
          in: query
          schema:
            type: string
          description: nullable
        - name: to_date
          in: query
          schema:
            type: string
          description: nullable
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/customer/status/list:
    get:
      tags:
        - order > customer
      summary: get all order status list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/store:
    post:
      tags:
        - order > customer
      summary: checkout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sub_total:
                  type: integer
                  example: '123'
                grand_total:
                  type: integer
                  example: '123'
                user_address_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/get-order/{order_number}:
    get:
      tags:
        - order > customer
      summary: get order by order number
      security:
        - bearerAuth: []
      parameters:
        - name: order_number
          in: path
          schema:
            type: string
          required: true
          example: tDzpw12O21
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/cancel-order/{order_number}:
    get:
      tags:
        - order > customer
      summary: cancel order by order number
      security:
        - bearerAuth: []
      parameters:
        - name: order_number
          in: path
          schema:
            type: string
          required: true
          example: ZJX445rX5
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/order/customer/order-status/{order_number}:
    get:
      tags:
        - order > customer
      summary: get order status by order number
      security:
        - bearerAuth: []
      parameters:
        - name: order_number
          in: path
          schema:
            type: integer
          required: true
          example: '0000006'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ticket/:
    post:
      tags:
        - Ticket
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  example: aldjwklajlwkdj
                description:
                  type: string
                  example: alsjdlaksjdaklsjdaklsjdaslk
                to_ids[]:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ticket-message/:
    post:
      tags:
        - Ticket
      summary: ticket message store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ticket_id:
                  type: integer
                  example: '3'
                message:
                  type: string
                  example: |-
                    alsjdwajljd
                    asldjwalkjlsdjalkjd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ticket:
    get:
      tags:
        - Ticket
      summary: index
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ticket/3:
    get:
      tags:
        - Ticket
      summary: show
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ticket/3/close:
    get:
      tags:
        - Ticket
      summary: close
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-rating/store:
    post:
      tags:
        - vendor rating > customer
      summary: store vendor rating
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                vendor_id: 1
                order_id: 78
                rating:
                  - type: delivery
                    star: 5
                  - type: quality
                    star: 4
                  - type: communication
                    star: 4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-rating:
    get:
      tags:
        - vendor rating > vendor
      summary: get all reviews
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vendor-rating/all:
    get:
      tags:
        - vendor rating
      summary: get vendor rating
      parameters:
        - name: vendor_id
          in: query
          schema:
            type: integer
          description: required
          example: '1'
        - name: order_number
          in: query
          schema:
            type: string
          description: nullable either use order_id or order_number
        - name: order_id
          in: query
          schema:
            type: string
          description: nullable either use order_id or order_number
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payout/{vendor_id}/dates:
    get:
      tags:
        - Payout
      summary: get payout dates
      security:
        - bearerAuth: []
      parameters:
        - name: vendor_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payout/{payout_id}:
    get:
      tags:
        - Payout
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: payout_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/user/update-certified:
    post:
      tags:
        - admin
      summary: certifiy vendor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                vendor_id:
                  type: integer
                  example: '6'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting:
    get:
      tags:
        - Site Settings
      summary: index
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting/{key}:
    get:
      tags:
        - Site Settings
      summary: show
      parameters:
        - name: key
          in: path
          schema:
            type: string
          required: true
          example: company_logo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/slider:
    get:
      tags:
        - Slider
      summary: index
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/vendor/homepage:
    get:
      tags:
        - Homepage
      summary: vendor list by most order
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/homepage:
    get:
      tags:
        - Homepage
      summary: category list for homepage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/homepage/latest:
    get:
      tags:
        - Homepage
      summary: get new products for homepage
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/homepage/most-ordered:
    get:
      tags:
        - Homepage
      summary: get most ordered products for homepage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/homepage/highest-rated:
    get:
      tags:
        - Homepage
      summary: get highest rated products for homepage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/tag:
    get:
      tags:
        - Tag
      summary: index
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/tag/{tag_id}:
    get:
      tags:
        - Tag
      summary: show
      parameters:
        - name: tag_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/dashboard:
    get:
      tags:
        - Vendor Dashboard
      summary: vendor dashboard data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/test:
    get:
      tags:
        - default
      summary: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
