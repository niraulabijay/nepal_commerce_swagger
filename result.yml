openapi: 3.0.0
info:
  title: Nepal Commerce API
  description: Ecommerce Multi-Vendor
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: user
  - name: vendor
  - name: Brand
  - name: Category
  - name: Attribute
  - name: Product
paths:
  /api/user/register:
    post:
      tags:
        - user
      summary: registration
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  example: customer
                email:
                  type: string
                  example: customer@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user/login:
    post:
      tags:
        - user
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: vendor@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/register:
    post:
      tags:
        - vendor
      summary: vendorRegistration
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: vendor
                email:
                  type: string
                  example: vendor@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/login:
    post:
      tags:
        - vendor
      summary: vendorLogin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: vendor@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/save-detail:
    post:
      tags:
        - vendor
      summary: storeVendorDetail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                registration_certificate:
                  type: string
                  format: binary
                vat_number:
                  type: string
                  example: aaasda1234
                contact_number:
                  type: string
                  example: aasdas
                company_name:
                  type: string
                  example: aa2341qwer
                phone:
                  type: string
                  example: asdfasdfasdas
                logo:
                  type: string
                  format: binary
                email:
                  type: string
                  example: asdf
                address:
                  type: string
                  example: asss
                bank:
                  type: string
                  example: aasd
                account_number:
                  type: string
                  example: asd
                cheque_photo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/vendor-detail:
    get:
      tags:
        - vendor
      summary: getVendorDetail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/profile:
    post:
      tags:
        - vendor
      summary: storeProfile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: seller edit
                email:
                  type: string
                  example: seller@email.com
                phone:
                  type: string
                  example: 0123456789 edit
                shop_name:
                  type: string
                  example: seller shop
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /vendor/user/administration:
    post:
      tags:
        - vendor
      summary: storeAdministrativeDetail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                legal_business_owner_name:
                  type: string
                  example: seller bussiness owner edit
                address:
                  type: string
                  example: seller address edit
                city:
                  type: string
                  example: city edit
                country:
                  type: string
                  example: country edit
                pan_number:
                  type: string
                  example: 1234567890 edit
                account_holder_name:
                  type: string
                  example: seller account  edit
                account_number:
                  type: string
                  example: 0987654321 edit
                bank:
                  type: string
                  example: seller bank edit
                branch_name:
                  type: string
                  example: seller branch edit
                citizenship:
                  type: string
                  format: binary
                pan:
                  type: string
                  format: binary
                signature:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/brand/brand:
    get:
      tags:
        - Brand
      summary: get all brands
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category:
    get:
      tags:
        - Category
      summary: getAllCategories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category/1:
    get:
      tags:
        - Category
      summary: getCategoryById
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category/category-parent:
    get:
      tags:
        - Category
      summary: getParent
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/attribute/attribute:
    get:
      tags:
        - Attribute
      summary: get all attributes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/attribute/category/id:
    get:
      tags:
        - Attribute
      summary: get category by id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product:
    post:
      tags:
        - Product
      summary: storeProduct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: product1edit
                category_id: '1'
                sub_category_id: '1'
                video_url: video_url1edit
                description: description1edit
                seo_title: seo_title1edit
                seo_description: seo_description1edit
                base_price: '444'
                tag:
                  - tag1
                  - tag2
                  - tag3
                specification:
                  title:
                    '1': specification1 edit
                    '2': specification2 edit
                    '3': specification3
                  description:
                    '1': specification description1 edit
                    '2': specification description2 edit
                    '3': specification description3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Product
      summary: getAllProducts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/product/1:
    patch:
      tags:
        - Product
      summary: editProduct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: product1edit
                category_id: '1'
                sub_category_id: '1'
                video_url: video_url1edit
                description: description1edit
                seo_title: seo_title1edit
                seo_description: seo_description1edit
                base_price: '444'
                tag:
                  - tag1
                  - tag2
                  - tag3
                specification:
                  title:
                    '1': specification1 edit
                    '2': specification2 edit
                    '3': specification3
                  description:
                    '1': specification description1 edit
                    '2': specification description2 edit
                    '3': specification description3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Product
      summary: getProductById
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Product
      summary: deleteProduct
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/save-image:
    post:
      tags:
        - Product
      summary: saveImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                type:
                  type: string
                  example: featured_image
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/product/store-variation/1:
    post:
      tags:
        - Product
      summary: tryStoreVariation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                availability[]:
                  type: integer
                  example: '1'
                sku[]:
                  type: string
                  example: sku
                stock[]:
                  type: integer
                  example: '500'
                base_price[]:
                  type: integer
                  example: '100'
                attribute[color][]:
                  type: string
                  example: yellow
                attribute[size][]:
                  type: integer
                  example: '42'
                attribute[weight]:
                  type: string
                selected_attribute[color][]:
                  type: string
                  example: red
                selected_attribute[weight][]:
                  type: integer
                  example: '42'
                selected_attribute[1-10][]:
                  type: integer
                  example: '90'
                selected_attribute[10-20][]:
                  type: integer
                  example: '80'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
