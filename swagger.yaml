---
info:
  _postman_id: 1c3eacd2-9caf-4ea8-abac-e34d0eb2c6ad
  name: Vedhayu
  schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
item:
- name: Authentication
  item:
  - name: register
    request:
      method: POST
      header: []
      body:
        mode: raw
        raw: "{\r\n    \"name\" : \"bijay\",\r\n    \"phone\" : \"9812345678\"\r\n}"
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/register"
        host:
        - "{{url}}"
        path:
        - api
        - register
    response: []
  - name: post otp
    request:
      method: POST
      header: []
      body:
        mode: raw
        raw: "{\r\n    \"user_id\": 1,\r\n    \"otp\": 176637\r\n}"
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/validateotp"
        host:
        - "{{url}}"
        path:
        - api
        - validateotp
    response: []
  - name: save password
    request:
      method: POST
      header: []
      body:
        mode: raw
        raw: "{\r\n    \"user_id\":1,\r\n    \"password\": \"password\"\r\n}"
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/savepassword"
        host:
        - "{{url}}"
        path:
        - api
        - savepassword
    response: []
  - name: login
    request:
      method: POST
      header: []
      body:
        mode: raw
        raw: "{\r\n    \"phone\" : \"9841587582\",\r\n    \"password\": \"password\"\r\n}"
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/login"
        host:
        - "{{url}}"
        path:
        - api
        - login
    response: []
  - name: firebase
    request:
      method: GET
      header: []
      url:
        raw: "{{url}}/api/testfirebase"
        host:
        - "{{url}}"
        path:
        - api
        - testfirebase
    response: []
  - name: fire user
    request:
      method: GET
      header: []
      url:
        raw: "{{url}}/api/testuser"
        host:
        - "{{url}}"
        path:
        - api
        - testuser
    response: []
  - name: class select
    request:
      method: POST
      header: []
      body:
        mode: raw
        raw: "{\r\n    \"class_id\": 1\r\n}"
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/class-select"
        host:
        - "{{url}}"
        path:
        - api
        - class-select
    response: []
  - name: Logout
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
      method: POST
      header:
      - key: Accept
        value: application/json
        type: text
      url:
        raw: "{{url}}/api/logout"
        host:
        - "{{url}}"
        path:
        - api
        - logout
    response: []
  - name: Social Login
    request:
      method: POST
      header:
      - key: Accept
        value: application/json
        type: text
      body:
        mode: raw
        raw: '{"grant_type":"social","provider":"google","access_token":"ya29.a0ARrdaM8kYOuAwd3cU-FfT4yk64duE7HGvgNDzBjC-VRUNpNdFOTq5yhzBxjXuK4eHJG0VbtaIcuQlagCwjMJDaKWfrbUZRyFNsQ_I6jQnZa2OFAtzhV8NZPZT3lPqXO4woF8R072GLuhuXJa_08s7yH7mH4L"}'
        options:
          raw:
            language: json
      url:
        raw: "{{url}}/api/social-login"
        host:
        - "{{url}}"
        path:
        - api
        - social-login
    response: []
- name: User Dashboard
  item:
  - name: Learn
    item:
    - name: Notes
      item:
      - name: Chapter with notes
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header: []
          url:
            raw: "{{url}}/api/notes/:subject_slug"
            host:
            - "{{url}}"
            path:
            - api
            - notes
            - ":subject_slug"
            variable:
            - key: subject_slug
              value: learn-thiss
        response: []
      - name: Single Note
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header:
          - key: Accept
            value: application/json
            type: text
          url:
            raw: "{{url}}/api/note/:id"
            host:
            - "{{url}}"
            path:
            - api
            - note
            - ":id"
            variable:
            - key: id
              value: '5'
        response: []
    - name: Flashcards
      item:
      - name: Chapter with flashcards
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header:
          - key: Accept
            value: application/json
            type: text
          url:
            raw: "{{url}}/api/flashcards/:subject_slug"
            host:
            - "{{url}}"
            path:
            - api
            - flashcards
            - ":subject_slug"
            variable:
            - key: subject_slug
              value: jast-ltd
        response: []
      - name: Single Flashcard
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header:
          - key: Accept
            value: application/json
            type: text
          url:
            raw: "{{url}}/api/flashcard/:id"
            host:
            - "{{url}}"
            path:
            - api
            - flashcard
            - ":id"
            variable:
            - key: id
              value: '251'
        response: []
    - name: QuestionSet
      item:
      - name: List
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header:
          - key: Accept
            value: application/json
            type: text
          url:
            raw: "{{url}}/api/questionsets/:subjectSlug"
            host:
            - "{{url}}"
            path:
            - api
            - questionsets
            - ":subjectSlug"
            variable:
            - key: subjectSlug
              value: learn-thiss
        response: []
      - name: Single QuestionSet
        request:
          auth:
            type: bearer
            bearer:
            - key: token
              value: "{{token}}"
              type: string
          method: GET
          header:
          - key: Accept
            value: application/json
            type: text
          url:
            raw: "{{url}}/api/questionset/:id"
            host:
            - "{{url}}"
            path:
            - api
            - questionset
            - ":id"
            variable:
            - key: id
              value: '3'
        response: []
    - name: Chapters
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/chapters/:subjectSlug"
          host:
          - "{{url}}"
          path:
          - api
          - chapters
          - ":subjectSlug"
          variable:
          - key: subjectSlug
            value: learn-thiss
      response: []
  - name: Practice
    item:
    - name: Practice Question
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{prod_token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{prod_url}}/api/practise_by_chapter/hoeger-lockman"
          host:
          - "{{prod_url}}"
          path:
          - api
          - practise_by_chapter
          - hoeger-lockman
      response: []
    - name: Store Question
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header:
        - key: Accept
          value: application/json
          type: text
        body:
          mode: raw
          raw: "{\r\n    \"chapter_id\":124,\r\n    \"data\":{\r\n        \"question_id\":178,\r\n
            \       \"correct\":0\r\n    }\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/practise/store"
          host:
          - "{{url}}"
          path:
          - api
          - practise
          - store
      response: []
  - name: Test
    item:
    - name: Start/Continue Test
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header:
        - key: Accept
          value: application/json
          type: text
        url:
          raw: "{{url}}/api/test/cummings-ltd"
          host:
          - "{{url}}"
          path:
          - api
          - test
          - cummings-ltd
      response: []
    - name: Save Test Data
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header:
        - key: Accept
          value: application/json
          type: text
        body:
          mode: raw
          raw: "{\r\n    \"log_id\":2,\r\n    \"test\":[\r\n        {\"questionId\":1012,\"answerId\":4047},\r\n
            \       {\"questionId\":1019,\"answerId\":4073}\r\n    ]\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/test/store"
          host:
          - "{{url}}"
          path:
          - api
          - test
          - store
      response: []
    - name: Quit
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"log_id\":2,\r\n    \"test\":[\r\n        {\"questionId\":1012,\"answerId\":4047},\r\n
            \       {\"questionId\":1019,\"answerId\":4073}\r\n    ]\r\n}"
          options:
            raw:
              language: json
      response: []
    - name: Test result
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/test/result/:id"
          host:
          - "{{url}}"
          path:
          - api
          - test
          - result
          - ":id"
          variable:
          - key: id
            value: '1'
      response: []
  - name: Combine-Test
    item:
    - name: Get Test Data
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/course_test"
          host:
          - "{{url}}"
          path:
          - api
          - course_test
      response: []
    - name: Store Test Data
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"log_id\":2,\r\n    \"test\":[\r\n        {\"questionId\":11206,\"answerId\":29},\r\n
            \       {\"questionId\":11208,\"answerId\":37}\r\n    ]\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/course_test/store"
          host:
          - "{{url}}"
          path:
          - api
          - course_test
          - store
      response: []
    - name: Quit
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"log_id\":3,\r\n    \"test\":[\r\n        {\"questionId\":11207,\"answerId\":33},\r\n
            \       {\"questionId\":11208,\"answerId\":38}\r\n    ]\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/course_test/quit"
          host:
          - "{{url}}"
          path:
          - api
          - course_test
          - quit
      response: []
    - name: Course Test result
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/course_test/result/:id"
          host:
          - "{{url}}"
          path:
          - api
          - course_test
          - result
          - ":id"
          variable:
          - key: id
            value: '3'
      response: []
  - name: Notice/Notif
    item:
    - name: Get notices
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header:
        - key: Accept
          value: application/json
          type: text
        url:
          raw: "{{url}}/api/notices"
          host:
          - "{{url}}"
          path:
          - api
          - notices
      response: []
    - name: Mark as read
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header:
        - key: Accept
          value: application/json
          type: text
        url:
          raw: "{{url}}/api/notices/seen"
          host:
          - "{{url}}"
          path:
          - api
          - notices
          - seen
      response: []
    - name: Unseen count
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header:
        - key: Accept
          value: application/json
          type: text
        url:
          raw: "{{url}}/api/notices/unseen/count"
          host:
          - "{{url}}"
          path:
          - api
          - notices
          - unseen
          - count
      response: []
  - name: Community
    item:
    - name: Get Comments
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/community/comment/:question_id"
          host:
          - "{{url}}"
          path:
          - api
          - community
          - comment
          - ":question_id"
          variable:
          - key: question_id
            value: '1'
      response: []
    - name: Store Comment
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header:
        - key: Accept
          value: application/json
          type: text
        body:
          mode: raw
          raw: "{\r\n    \"question_id\":1,\r\n    \"comment\":\"Make that b\",\r\n
            \   \"parent_comment\":1\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/community/comment"
          host:
          - "{{url}}"
          path:
          - api
          - community
          - comment
      response: []
    - name: Vote action
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"comment_id\":1,\r\n    \"vote_type\": \"up\"\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/community/comment/vote_action"
          host:
          - "{{url}}"
          path:
          - api
          - community
          - comment
          - vote_action
      response: []
  - name: Syllabus
    item:
    - name: Get syllabus
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header:
        - key: Accept
          value: application/json
          type: text
        url:
          raw: "{{url}}/api/syllabus/all"
          host:
          - "{{url}}"
          path:
          - api
          - syllabus
          - all
      response: []
  - name: Bookmark
    item:
    - name: Store Bookmark
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header:
        - key: Accept
          value: application/json
          type: text
        body:
          mode: raw
          raw: "{\r\n    \"note_id\" : 1\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/bookmark/note/store"
          host:
          - "{{url}}"
          path:
          - api
          - bookmark
          - note
          - store
      response: []
    - name: Get Bookmarks
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/bookmark/notes"
          host:
          - "{{url}}"
          path:
          - api
          - bookmark
          - notes
      response: []
  - name: Forum
    item:
    - name: Get
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/forum/post?page=1&query=what is the"
          host:
          - "{{url}}"
          path:
          - api
          - forum
          - post
          query:
          - key: page
            value: '1'
          - key: query
            value: what is the
      response: []
    - name: Single Forum
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: GET
        header: []
        url:
          raw: "{{url}}/api/forum/single/:slug"
          host:
          - "{{url}}"
          path:
          - api
          - forum
          - single
          - ":slug"
          variable:
          - key: slug
            value: what-is-the-compound-with-formula-c6h12o6-called
      response: []
    - name: Post
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"course_id\":122,\r\n    \"topic\":\"What is the device
            to check heart rate called called?\"\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/forum/post"
          host:
          - "{{url}}"
          path:
          - api
          - forum
          - post
      response: []
    - name: Comment
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: raw
          raw: "{\r\n    \"forum_id\":2,\r\n    \"comment\":\"That is confusing\",\r\n
            \   \"parent\":null\r\n}"
          options:
            raw:
              language: json
        url:
          raw: "{{url}}/api/forum/comment"
          host:
          - "{{url}}"
          path:
          - api
          - forum
          - comment
      response: []
    - name: Vote Action
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: formdata
          formdata:
          - key: comment_id
            value: '2'
            type: text
          - key: vote_type
            value: up
            description: up / down / clear
            type: text
        url:
          raw: "{{url}}/api/forum/vote"
          host:
          - "{{url}}"
          path:
          - api
          - forum
          - vote
      response: []
  - name: Report-Issue
    item:
    - name: Question
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: formdata
          formdata:
          - key: reason
            value: Question has type
            type: text
        url:
          raw: "{{url}}/api/issue/question/:id"
          host:
          - "{{url}}"
          path:
          - api
          - issue
          - question
          - ":id"
          variable:
          - key: id
            value: '100'
      response: []
    - name: Forum
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: formdata
          formdata:
          - key: reason
            value: Forum is abusive
            type: text
        url:
          raw: "{{url}}/api/issue/forum/:id"
          host:
          - "{{url}}"
          path:
          - api
          - issue
          - forum
          - ":id"
          variable:
          - key: id
            value: '1'
      response: []
    - name: Forum comment
      request:
        auth:
          type: bearer
          bearer:
          - key: token
            value: "{{token}}"
            type: string
        method: POST
        header: []
        body:
          mode: formdata
          formdata:
          - key: reason
            value: Comment is abusive
            type: text
        url:
          raw: "{{url}}/api/issue/forum/comment/:id"
          host:
          - "{{url}}"
          path:
          - api
          - issue
          - forum
          - comment
          - ":id"
          variable:
          - key: id
            value: '1'
      response: []
  - name: classes
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
      method: GET
      header:
      - key: Accept
        value: application/json
        type: text
      url:
        raw: "{{url}}/api/classes"
        host:
        - "{{url}}"
        path:
        - api
        - classes
    response: []
  - name: contextData (subjects)
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
      method: GET
      header: []
      url:
        raw: "{{url}}/api/subjects/122"
        host:
        - "{{url}}"
        path:
        - api
        - subjects
        - '122'
    response: []
  - name: profile
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
      method: GET
      header:
      - key: Accept
        value: application/json
        type: text
      url:
        raw: "{{url}}/api/profile"
        host:
        - "{{url}}"
        path:
        - api
        - profile
    response: []
  - name: profile update
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
        - key: password
          value: "{{token}}"
          type: string
      method: POST
      header:
      - key: Accept
        value: application/json
        type: text
      body:
        mode: formdata
        formdata:
        - key: name
          value: Bijay
          type: text
        - key: profile_image
          type: file
          src: "/C:/Users/Bijay/Downloads/download.jpg"
        - key: gender
          value: Male
          type: text
        - key: dob
          value: '2054-05-09'
          type: text
        - key: address
          value: Battisputali
          type: text
        - key: institution
          value: KEC
          type: text
      url:
        raw: "{{url}}/api/profile/update"
        host:
        - "{{url}}"
        path:
        - api
        - profile
        - update
    response: []
  - name: Feedback
    request:
      auth:
        type: bearer
        bearer:
        - key: token
          value: "{{token}}"
          type: string
      method: POST
      header: []
      body:
        mode: formdata
        formdata:
        - key: feedback
          value: hello new feedback
          type: text
      url:
        raw: "{{url}}/api/feedback/store"
        host:
        - "{{url}}"
        path:
        - api
        - feedback
        - store
    response: []
- name: CMS
  item:
  - name: Course Syllabus
    request:
      method: GET
      header: []
      url:
        raw: "{{url}}/api/get_syllabus/:slug"
        host:
        - "{{url}}"
        path:
        - api
        - get_syllabus
        - ":slug"
        variable:
        - key: slug
          value: learn-thiss
    response: []
